[project]
name = "rasterra"
version = "0.6.2"
description = "A sleek, object-oriented interface designed for intuitive raster data manipulation in Python."
license = "BSD-3-Clause"
readme = "README.md"
authors = [
    {name = "James Collins", email = "collijk1@gmail.com"},
]
requires-python = ">=3.12"
dependencies = [
    "click>=8.0",
    "pyproj>=3.6.0",
    "numpy>=2.0",
    "affine>=2.4",
    "shapely>=2.0",
    "rasterio>=1.3.9",
    "matplotlib",
    "geopandas>=1.0.1",

]

[project.urls]
homepage = "https://collijk.github.io/rasterra"
repository = "https://github.com/collijk/rasterra"
documentation = "https://collijk.github.io/rasterra"

[tool.poetry]
packages = [
    { include = "rasterra", from = "src" }
]
requires-poetry = ">=2.0"

[tool.poetry.dependencies]
python = ">=3.12, <4.0"

# We keep the dev dependencies here instead of in the project optional dependencies
# so they're still installed by default with `poetry install`.
# They won't be installed or shipped with the package.
 [tool.poetry.group.dev.dependencies]
# Things we want to put a lower bound on
mypy = "^1.15.0"
mkdocs-material = "^9.6.0"
pre-commit = "^4.0.0"
pytest = "^8.3.0"
ruff = "^0.9.7"
# Things we don't care about the version
mkdocstrings = {extras = ["python"], version = "*"}
mkdocs-table-reader-plugin = "*"
mkdocs-gen-files = "*"
mkdocs-literate-nav = "*"
mkdocs-section-index = "*"
pymdown-extensions = "*"
pytest-github-actions-annotate-failures = "*"
pytest-cov = "*"
python-kacl = "*"

[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py312" # The lowest supported version

[tool.ruff.lint]
# By default, enable all the lint rules.
# Add to the ignore list below if you don't want some rules.
# If you need some ignores for certain modules, see tool.ruff.lint.per-file-ignores below.
# For individual ignore cases, prefer inline `# noqa`s within the code.
select = ["ALL"]
ignore = [
    "COM812",   # flake8 missing trailing comma, fomatter handles
    "ISC001",   # Implicit string concatenation is not allowed
    "ANN",      # Type hints related, let mypy handle these.
    "D",        # Docstrings related, way too strict to our taste
    "RET505",   # Else after return, too many false positives.
    "UP038",    # Union types in isinstace/issubclass checks; not fully supported
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "S101",     # "Use of `assert` detected"
    "ARG",      # "Unused function argument". Fixtures are often unused.
    "S105",     # "Possible hardcoded password".
]
"scripts/**" = [
    "INP001",   # "Scripts are not part of a package."
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pylint]
max-args = 9

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    "classmethod",
    "pydantic.validator",
    "pydantic.root_validator",
]

[tool.pytest.ini_options]
addopts = """\
    --cov rasterra \
    --cov tests \
    --cov-report term-missing \
    --no-cov-on-fail \
"""

[tool.coverage.report]
fail_under = 1
exclude_lines = [
    'if TYPE_CHECKING:',
    'pragma: no cover'
]

[tool.mypy]
# This is the global mypy configuration.
# Avoid changing this!
strict = true  # See all the enabled flags `mypy --help | grep -A 10 'Strict mode'`
disallow_any_unimported = false
plugins = [
    "numpy.typing.mypy_plugin"
]

[[tool.mypy.overrides]]
module = [
    "affine",
    "rasterio.*",
    "shapely.*",
    "mpl_toolkits.*",
    "geopandas.*",
]
ignore_missing_imports = true
